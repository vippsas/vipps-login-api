{
	"info": {
		"_postman_id": "d04aa280-d7f8-444a-afc3-29a340065dcc",
		"name": "CIBA API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Init Auth",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "aaf2f294-450b-4f19-a846-1448a127b6fd",
						"exec": [
							"var client_id = pm.environment.get(\"client_id\");",
							"var client_secret = pm.environment.get(\"client_secret\");",
							"",
							"var wordArrayAzp = CryptoJS.enc.Utf8.parse(client_id + \":\" + client_secret);",
							"var client_authorization = CryptoJS.enc.Base64.stringify(wordArrayAzp);",
							"",
							"pm.environment.set(\"client_authorization\", client_authorization);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b51f048f-f3eb-4a8f-b8ad-2b1985756022",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var auth_req_id = pm.response.json().auth_req_id;",
							"",
							"pm.environment.set(\"auth_req_id\", auth_req_id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{client_authorization}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "scope",
							"value": "name address openid phoneNumber birthDate",
							"type": "text"
						},
						{
							"key": "login_hint",
							"value": "urn:mobilenumber:{{mobile_number}}",
							"type": "text"
						},
						{
							"key": "state",
							"value": "some-state-long-enough-to-ensure-sufficient-entropy",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{init_ciba_endpoint}}",
					"host": [
						"{{init_ciba_endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c81696a6-4f98-4766-972e-7c15bcbe2973",
						"exec": [
							"var client_id = pm.environment.get(\"client_id\");",
							"var client_secret = pm.environment.get(\"client_secret\");",
							"",
							"var wordArrayAzp = CryptoJS.enc.Utf8.parse(client_id + \":\" + client_secret);",
							"var client_authorization = CryptoJS.enc.Base64.stringify(wordArrayAzp);",
							"",
							"pm.environment.set(\"client_authorization\", client_authorization);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "921af772-ea70-4245-9f56-b322495dcf80",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var access_token = pm.response.json().access_token;",
							"",
							"pm.environment.set(\"access_token\", access_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "Basic {{client_authorization}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "auth_req_id",
							"value": "{{auth_req_id}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "urn:openid:params:grant-type:ciba",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{token_endpoint}}",
					"host": [
						"{{token_endpoint}}"
					]
				},
				"description": "Fetch the access token after the user has authenticated"
			},
			"response": []
		},
		{
			"name": "Get user info",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f3d419de-5960-44de-9b06-cadc38383f8a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{userinfo_endpoint}}",
					"host": [
						"{{userinfo_endpoint}}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}
