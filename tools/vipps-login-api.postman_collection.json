{
	"info": {
		"_postman_id": "fd57fa3b-6108-4487-9afa-090e202ca553",
		"name": "vipps-login-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Vipps Login in Browser",
			"item": [
				{
					"name": "Get token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var client_id = pm.environment.get(\"client_id\");",
									"var client_secret = pm.environment.get(\"client_secret\");",
									"",
									"var wordArrayAzp = CryptoJS.enc.Utf8.parse(client_id + \":\" + client_secret);",
									"var client_authorization = CryptoJS.enc.Base64.stringify(wordArrayAzp);",
									"",
									"pm.environment.set(\"client_authorization\", client_authorization);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var access_token = pm.response.json().access_token;",
									"",
									"pm.environment.set(\"access_token\", access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Basic {{client_authorization}}",
								"type": "text"
							},
							{
								"key": "Merchant-Serial-Number",
								"value": "{{merchantSerialNumber}}",
								"type": "default"
							},
							{
								"key": "Vipps-System-Name",
								"value": "{{vipps_system_name}}",
								"type": "default"
							},
							{
								"key": "Vipps-System-Version",
								"value": "{{vipps_system_version}}",
								"type": "default"
							},
							{
								"key": "Vipps-System-Plugin-Name",
								"value": "{{vipps_system_plugin_name}}",
								"type": "default"
							},
							{
								"key": "Vipps-System-Plugin-Version",
								"value": "{{vipps_system_plugin_version}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{code}}",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirect_uri}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{token_endpoint}}",
							"host": [
								"{{token_endpoint}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CIBA Without Redirect",
			"item": [
				{
					"name": "Init CIBA no-redirect",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var client_id = pm.environment.get(\"client_id\");",
									"var client_secret = pm.environment.get(\"client_secret\");",
									"",
									"var wordArrayAzp = CryptoJS.enc.Utf8.parse(client_id + \":\" + client_secret);",
									"var client_authorization = CryptoJS.enc.Base64.stringify(wordArrayAzp);",
									"",
									"pm.environment.set(\"client_authorization\", client_authorization);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var auth_req_id = pm.response.json().auth_req_id;",
									"",
									"pm.environment.set(\"auth_req_id\", auth_req_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic {{client_authorization}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "scope",
									"value": "name address openid phoneNumber birthDate",
									"type": "text"
								},
								{
									"key": "login_hint",
									"value": "urn:mobilenumber:{{mobileNumber}}",
									"type": "text"
								},
								{
									"key": "state",
									"value": "some-state-long-enough-to-ensure-sufficient-entropy",
									"type": "text"
								},
								{
									"key": "binding_message",
									"value": "XYZ-123",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{init_ciba_endpoint}}",
							"host": [
								"{{init_ciba_endpoint}}"
							]
						},
						"description": "Use this request to initiate a Vipps Login from phone number aka CIBA login without redirect. In this flow the token endpoint needs to be polled with the auth_req_id from the merchant's backend system"
					},
					"response": []
				},
				{
					"name": "Token no-redirect",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var client_id = pm.environment.get(\"client_id\");",
									"var client_secret = pm.environment.get(\"client_secret\");",
									"",
									"var wordArrayAzp = CryptoJS.enc.Utf8.parse(client_id + \":\" + client_secret);",
									"var client_authorization = CryptoJS.enc.Base64.stringify(wordArrayAzp);",
									"",
									"pm.environment.set(\"client_authorization\", client_authorization);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var access_token = pm.response.json().access_token;",
									"",
									"pm.environment.set(\"access_token\", access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic {{client_authorization}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "auth_req_id",
									"value": "{{auth_req_id}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "urn:openid:params:grant-type:ciba",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{token_endpoint}}",
							"host": [
								"{{token_endpoint}}"
							]
						},
						"description": "Fetch the access token after the user has authenticated. Use this request to initiate a Vipps Login from phone number aka CIBA login without redirect. "
					},
					"response": []
				}
			]
		},
		{
			"name": "CIBA With Redirect",
			"item": [
				{
					"name": "Init CIBA redirect",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var client_id = pm.environment.get(\"client_id\");",
									"var client_secret = pm.environment.get(\"client_secret\");",
									"",
									"var wordArrayAzp = CryptoJS.enc.Utf8.parse(client_id + \":\" + client_secret);",
									"var client_authorization = CryptoJS.enc.Base64.stringify(wordArrayAzp);",
									"",
									"pm.environment.set(\"client_authorization\", client_authorization);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var auth_req_id = pm.response.json().auth_req_id;",
									"",
									"pm.environment.set(\"auth_req_id\", auth_req_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{client_authorization}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "scope",
									"value": "name address openid phoneNumber birthDate",
									"type": "text"
								},
								{
									"key": "login_hint",
									"value": "urn:mobilenumber:{{mobileNumber}}",
									"type": "text"
								},
								{
									"key": "state",
									"value": "some-state-long-enough-to-ensure-sufficient-entropy",
									"type": "text"
								},
								{
									"key": "binding_message",
									"value": "XYZ-123",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "http://localhost",
									"type": "text"
								},
								{
									"key": "requested_flow",
									"value": "login_to_webpage",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{init_ciba_endpoint}}",
							"host": [
								"{{init_ciba_endpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Token redirect",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var client_id = pm.environment.get(\"client_id\");",
									"var client_secret = pm.environment.get(\"client_secret\");",
									"",
									"var wordArrayAzp = CryptoJS.enc.Utf8.parse(client_id + \":\" + client_secret);",
									"var client_authorization = CryptoJS.enc.Base64.stringify(wordArrayAzp);",
									"",
									"pm.environment.set(\"client_authorization\", client_authorization);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var access_token = pm.response.json().access_token;",
									"",
									"pm.environment.set(\"access_token\", access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic {{client_authorization}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "urn:vipps:params:grant-type:ciba-redirect",
									"type": "text"
								},
								{
									"key": "code",
									"value": "",
									"description": "Copy the code parameter from the redirect here",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{token_endpoint}}",
							"host": [
								"{{token_endpoint}}"
							]
						},
						"description": "Fetch the access token after the user has authenticated"
					},
					"response": []
				}
			]
		},
		{
			"name": "Partner login",
			"item": [
				{
					"name": "CIBA with redirect",
					"item": [
						{
							"name": "1. Get partner token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token\", jsonData.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "client_id",
										"value": "{{client_id}}",
										"type": "default"
									},
									{
										"key": "client_secret",
										"value": "{{client_secret}}",
										"type": "default"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Ocp-Apim-Subscription-Key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://apitest.vipps.no/accesstoken/get",
									"protocol": "https",
									"host": [
										"apitest",
										"vipps",
										"no"
									],
									"path": [
										"accesstoken",
										"get"
									]
								},
								"description": "Fetch the access token that will be used for authenticating as a partner."
							},
							"response": []
						},
						{
							"name": "2. Start login",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var client_id = pm.environment.get(\"client_id\");",
											"var client_secret = pm.environment.get(\"client_secret\");",
											"",
											"var wordArrayAzp = CryptoJS.enc.Utf8.parse(client_id + \":\" + client_secret);",
											"var client_authorization = CryptoJS.enc.Base64.stringify(wordArrayAzp);",
											"",
											"pm.environment.set(\"client_authorization\", client_authorization);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var auth_req_id = pm.response.json().auth_req_id;",
											"",
											"pm.environment.set(\"auth_req_id\", auth_req_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "merchant-serial-number",
										"value": "{{targetMerchantSerialNumber}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "scope",
											"value": "name address openid phoneNumber birthDate",
											"type": "text"
										},
										{
											"key": "login_hint",
											"value": "urn:mobilenumber:{{mobileNumber}}",
											"type": "text"
										},
										{
											"key": "state",
											"value": "some-state-long-enough-to-ensure-sufficient-entropy",
											"type": "text"
										},
										{
											"key": "binding_message",
											"value": "XYZ-123",
											"type": "text"
										},
										{
											"key": "redirect_uri",
											"value": "http://localhost",
											"type": "text"
										},
										{
											"key": "requested_flow",
											"value": "login_to_webpage",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{init_ciba_endpoint}}",
									"host": [
										"{{init_ciba_endpoint}}"
									]
								},
								"description": "Start the CIBA with redirect login flow. This triggers a new login flow in the target user's Vipps app."
							},
							"response": []
						},
						{
							"name": "3. Get login token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var client_id = pm.environment.get(\"client_id\");",
											"var client_secret = pm.environment.get(\"client_secret\");",
											"",
											"var wordArrayAzp = CryptoJS.enc.Utf8.parse(client_id + \":\" + client_secret);",
											"var client_authorization = CryptoJS.enc.Base64.stringify(wordArrayAzp);",
											"",
											"pm.environment.set(\"client_authorization\", client_authorization);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var access_token = pm.response.json().access_token;",
											"",
											"pm.environment.set(\"access_token\", access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "merchant-serial-number",
										"value": "{{targetMerchantSerialNumber}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "auth_req_id",
											"value": "{{auth_req_id}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "urn:vipps:params:grant-type:ciba-redirect",
											"type": "text"
										},
										{
											"key": "code",
											"value": "",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "{{token_endpoint}}",
									"host": [
										"{{token_endpoint}}"
									]
								},
								"description": "Fetch the access token after the user has authenticated. Note you have to fill in the `code` field manually. You can get the `code` from the redirect URI that happens after you complete the login in the Vipps app.\n\nThis access token can be used towards to fetch user data from /userinfo."
							},
							"response": []
						}
					]
				},
				{
					"name": "CIBA without redirect",
					"item": [
						{
							"name": "1. Get partner token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token\", jsonData.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "client_id",
										"value": "{{client_id}}",
										"type": "default"
									},
									{
										"key": "client_secret",
										"value": "{{client_secret}}",
										"type": "default"
									},
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{Ocp-Apim-Subscription-Key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://apitest.vipps.no/accesstoken/get",
									"protocol": "https",
									"host": [
										"apitest",
										"vipps",
										"no"
									],
									"path": [
										"accesstoken",
										"get"
									]
								},
								"description": "Fetch the access token that will be used for authenticating as a partner."
							},
							"response": []
						},
						{
							"name": "2. Start login",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var client_id = pm.environment.get(\"client_id\");",
											"var client_secret = pm.environment.get(\"client_secret\");",
											"",
											"var wordArrayAzp = CryptoJS.enc.Utf8.parse(client_id + \":\" + client_secret);",
											"var client_authorization = CryptoJS.enc.Base64.stringify(wordArrayAzp);",
											"",
											"pm.environment.set(\"client_authorization\", client_authorization);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var auth_req_id = pm.response.json().auth_req_id;",
											"",
											"pm.environment.set(\"auth_req_id\", auth_req_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "merchant-serial-number",
										"value": "{{targetMerchantSerialNumber}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "scope",
											"value": "name address openid phoneNumber birthDate",
											"type": "text"
										},
										{
											"key": "login_hint",
											"value": "urn:mobilenumber:{{mobileNumber}}",
											"type": "text"
										},
										{
											"key": "state",
											"value": "some-state-long-enough-to-ensure-sufficient-entropy",
											"type": "text"
										},
										{
											"key": "binding_message",
											"value": "XYZ-123",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{init_ciba_endpoint}}",
									"host": [
										"{{init_ciba_endpoint}}"
									]
								},
								"description": "Start the CIBA without redirect login flow. This triggers a new login flow in the target user's Vipps app."
							},
							"response": []
						},
						{
							"name": "3. Get login token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var client_id = pm.environment.get(\"client_id\");",
											"var client_secret = pm.environment.get(\"client_secret\");",
											"",
											"var wordArrayAzp = CryptoJS.enc.Utf8.parse(client_id + \":\" + client_secret);",
											"var client_authorization = CryptoJS.enc.Base64.stringify(wordArrayAzp);",
											"",
											"pm.environment.set(\"client_authorization\", client_authorization);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var access_token = pm.response.json().access_token;",
											"",
											"pm.environment.set(\"access_token\", access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "merchant-serial-number",
										"value": "{{targetMerchantSerialNumber}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "auth_req_id",
											"value": "{{auth_req_id}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "urn:openid:params:grant-type:ciba",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{token_endpoint}}",
									"host": [
										"{{token_endpoint}}"
									]
								},
								"description": "Fetch the access token after the user has authenticated. This access token can be used towards to fetch user data from /userinfo."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Get OIDC well-known",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var uuid = require('uuid');",
							"var url = require('url');",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"token_endpoint\", jsonData.token_endpoint);",
							"pm.environment.set(\"userinfo_endpoint\", jsonData.userinfo_endpoint);",
							"pm.environment.set(\"init_ciba_endpoint\", jsonData.backchannel_authentication_endpoint);",
							"",
							"var start_login_uri = ",
							"    jsonData.authorization_endpoint ",
							"        + \"?client_id=\" + pm.variables.get(\"client_id\")",
							"        + \"&response_type=\" + pm.variables.get(\"response_type\")",
							"        + \"&scope=\" + pm.variables.get(\"scope\")",
							"        + \"&state=\" + uuid.v4()",
							"        + \"&redirect_uri=\" + pm.variables.get(\"redirect_uri\");",
							"",
							"pm.environment.set(\"start_login_uri\", url.format(start_login_uri));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Merchant-Serial-Number",
						"value": "{{merchantSerialNumber}}",
						"type": "default"
					},
					{
						"key": "Vipps-System-Name",
						"value": "{{vipps_system_name}}",
						"type": "default"
					},
					{
						"key": "Vipps-System-Version",
						"value": "{{vipps_system_version}}",
						"type": "default"
					},
					{
						"key": "Vipps-System-Plugin-Name",
						"value": "{{vipps_system_plugin_name}}",
						"type": "default"
					},
					{
						"key": "Vipps-System-Plugin-Version",
						"value": "{{vipps_system_plugin_version}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{well-known_uri}}",
					"host": [
						"{{well-known_uri}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Merchant-Serial-Number",
						"value": "{{merchantSerialNumber}}",
						"type": "default"
					},
					{
						"key": "Vipps-System-Name",
						"value": "{{vipps_system_name}}",
						"type": "default"
					},
					{
						"key": "Vipps-System-Version",
						"value": "{{vipps_system_version}}",
						"type": "default"
					},
					{
						"key": "Vipps-System-Plugin-Name",
						"value": "{{vipps_system_plugin_name}}",
						"type": "default"
					},
					{
						"key": "Vipps-System-Plugin-Version",
						"value": "{{vipps_system_plugin_version}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{userinfo_endpoint}}",
					"host": [
						"{{userinfo_endpoint}}"
					]
				}
			},
			"response": []
		}
	]
}